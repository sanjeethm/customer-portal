# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
            
      # store the version denoted by the POM onto the env
      - run: mkdir -p target
      - run: mvn dependency:go-offline
      - run: mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -Ev '(^\[|Download)' > target/version.txt

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
        
      - run: mvn package
      - persist_to_workspace:
          root: target
          paths:
            - customer-portal.jar
            - version.txt

  deploy:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run: sudo pip install awscli
  
      - run: |
              export PROJECT_VERSION=$(cat /tmp/workspace/version.txt)
              aws s3 cp /tmp/workspace/customer-portal.jar s3://my-bucket/${PROJECT_VERSION}/customer-portal.jar --region us-east-1
              aws elasticbeanstalk create-application-version --application-name customer-portal --version-label ${PROJECT_VERSION} --source-bundle S3Bucket="my-bucket",S3Key="${PROJECT_VERSION}/customer-portal.jar" --region us-east-1

workflows:
  version: 2
  wf1:
    jobs:
      - test
      - deploy:
          requires:
            - test
